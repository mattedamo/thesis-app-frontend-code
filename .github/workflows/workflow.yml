name: push-frontend

on:
  push:
    branches: 
      - 'master'
      - 'features/**'
      - 'releases/**'

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check existence input.yaml and Dockerfile 
      id: check_file
      uses: andstor/file-existence-action@v1
      with:
        files: "input.yaml, Dockerfile"
    - name: Files don't exist
      if: steps.check_file.outputs.files_exists == 'false'
      run: |
        echo "failed"
        exit 1
    - name: Files exist
      if: steps.check_file.outputs.files_exists == 'true'
      run: echo "exists!"
    
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    
    - name: Extract branch name for image tag
      if: contains(
          github.event.ref
          , 'master')
      shell: bash
      run: echo "##[set-output name=branch-tag;]$(echo prod)"
      id: branch-img-master
    
    - name: Extract branch name for image tag
      if: contains(
          github.event.ref
          , 'features') || contains(
          github.event.ref
          , 'releases') 
      shell: bash
      run: echo "##[set-output name=branch-tag;]$(IFS='/' read -r -a array <<< ${GITHUB_REF#refs/heads/} &&  echo ${array[-2]}-${array[-1]})"
      id: branch-img-not-master
   
    - name: Setup Python
      uses: actions/setup-python@v2
      with: 
        python-version: "3.x"
    - run: pip install PyYAML
      name: Install py dependencies
    - run: python validation-input-file.py
      name: Validation of input file
      
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      if: contains(
          github.event.ref
          , 'features') || contains(
          github.event.ref
          , 'releases') 
      with:
        push: true
        context: .
        file: ./Dockerfile
        tags: ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_FRONTEND_REPO}}:${{ github.sha }}-${{steps.branch-img-not-master.outputs.branch-tag}}, ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_FRONTEND_REPO}}:latest-${{steps.branch-img-not-master.outputs.branch-tag}}
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      if: contains(
          github.event.ref
          , 'master')
      with:
        push: true
        context: .
        file: ./Dockerfile
        tags: ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_FRONTEND_REPO}}:${{ github.sha }}-${{steps.branch-img-master.outputs.branch-tag}}, ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_FRONTEND_REPO}}:latest-${{steps.branch-img-master.outputs.branch-tag}}

          
    - name: Add and commit changes
      uses: EndBug/add-and-commit@v6
      with:
        add: "input.yaml"
        message: 'updated input.yaml'
  
  update-develop-branch:
    name: Update Develop Branch
    runs-on: ubuntu-latest
    needs: setup
    if: contains(
          github.event.ref
          , 'features')
    steps:

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git checkout develop
          git rebase ${{steps.extract_branch.outputs.branch}}
          git push origin develop
  
  trigger-workflow:
    name: Trigger workflow
    runs-on: ubuntu-latest
    needs: setup
    steps:

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      
      - name: Trigger infrastructure repo workflow
        if: contains(
          github.event.ref
          , 'features') || contains(
          github.event.ref
          , 'releases') 
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update-infrastructure
          ref: master
          inputs: '{"docker-image-tag" : "${{ github.sha }}-${{steps.branch-img-not-master.outputs.branch-tag}}", "code-branch" : "${{steps.extract_branch.outputs.branch}}", "code-repo" : "${{ github.event.repository.name }}", "docker-frontend-repo" : "${{secrets.DOCKER_FRONTEND_REPO}}","docker-backend-repo" : "${{secrets.DOCKER_BACKEND_REPO}}", "tier" : "${{secrets.TIER}}"}'
          repo: ${{ github.repository_owner }}/${{ secrets.INFRASTRUCTURE_REPO }}
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Trigger infrastructure repo workflow
        if: contains(
          github.event.ref
          , 'master')
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update-infrastructure
          ref: master
          inputs: '{"docker-image-tag" : "{{ github.sha }}-${{steps.branch-img-master.outputs.branch-tag}}", "code-branch" : "${{steps.extract_branch.outputs.branch}}", "code-repo" : "${{ github.event.repository.name }}", "docker-frontend-repo" : "${{secrets.DOCKER_FRONTEND_REPO}}","docker-backend-repo" : "${{secrets.DOCKER_BACKEND_REPO}}", "tier" : "${{secrets.TIER}}"}'
          repo: ${{ github.repository_owner }}/${{ secrets.INFRASTRUCTURE_REPO }}
          token: ${{ secrets.PAT_TOKEN }}
